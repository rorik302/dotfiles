// Generated by kalamine on 2025-05-08
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : custom.xkb_symbols
// Project page  : https://OneDeadKey.github.com/kalamine
// Author        : nobody
// Version       : 0.0.1
// License       : WTFPL - Do What The Fuck You Want Public License
//
// custom QWERTY layout
//
// ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━━┓
// │ ~   │ !   │ @   │ #   │ $   │ %   │ ^   │ &   │ *   │ (   │ )   │ _   │ +   ┃          ┃
// │ `   │ 1   │ 2   │ 3   │ 4   │ 5   │ 6   │ 7   │ 8   │ 9   │ 0   │ -   │ =   ┃ ⌫        ┃
// ┢━━━━━┷━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┺━━┯━━━━━━━┩
// ┃        ┃ Q   │ W   │ E   │ R   │ T   │ Y   │ U   │ I   │ O   │ P   │ { { │ } } │ |     │
// ┃ ↹      ┃     │     │     │     │     │     │     │     │     │     │ [ [ │ ] ] │ \     │
// ┣━━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┲━━━━┷━━━━━━━┪
// ┃         ┃ A   │ S   │ D   │ F   │ G   │ H   │ J   │ K   │ L   │ : : │ " " ┃            ┃
// ┃ ⇬       ┃     │     │     │     │     │     │     │     │     │ ; ; │ ' ' ┃ ⏎          ┃
// ┣━━━━━━━━━┻━━┱──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┬──┴──┲━━┻━━━━━━━━━━━━┫
// ┃            ┃ Z   │ X   │ C   │ V   │ B   │ N   │ M   │ < < │ > > │ ? ? ┃               ┃
// ┃ ⇧          ┃     │     │     │     │     │     │     │ , , │ . . │ / / ┃ ⇧             ┃
// ┣━━━━━━━┳━━━━┻━━┳━━┷━━━━┱┴─────┴─────┴─────┴─────┴─────┴─┲━━━┷━━━┳━┷━━━━━╋━━━━━━━┳━━━━━━━┫
// ┃       ┃       ┃       ┃                                ┃       ┃       ┃       ┃       ┃
// ┃ Ctrl  ┃ super ┃ Alt   ┃ ␣                              ┃ Alt   ┃ super ┃ menu  ┃ Ctrl  ┃
// ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┻━━━━━━━┛

partial alphanumeric_keys modifier_keys
xkb_symbols "custom" {
    name[group1]= "custom QWERTY layout";
    key.type[group1] = "FOUR_LEVEL";

    // Digits
    key <AE01> {[ 1               , exclam          , VoidSymbol      , VoidSymbol      ]}; // 1 !
    key <AE02> {[ 2               , at              , VoidSymbol      , VoidSymbol      ]}; // 2 @
    key <AE03> {[ 3               , numbersign      , VoidSymbol      , VoidSymbol      ]}; // 3 #
    key <AE04> {[ 4               , dollar          , VoidSymbol      , VoidSymbol      ]}; // 4 $
    key <AE05> {[ 5               , percent         , VoidSymbol      , VoidSymbol      ]}; // 5 %
    key <AE06> {[ 6               , asciicircum     , VoidSymbol      , VoidSymbol      ]}; // 6 ^
    key <AE07> {[ 7               , ampersand       , VoidSymbol      , VoidSymbol      ]}; // 7 &
    key <AE08> {[ 8               , asterisk        , VoidSymbol      , VoidSymbol      ]}; // 8 *
    key <AE09> {[ 9               , parenleft       , VoidSymbol      , VoidSymbol      ]}; // 9 (
    key <AE10> {[ 0               , parenright      , VoidSymbol      , VoidSymbol      ]}; // 0 )

    // Letters, first row
    key <AD01> {[ q               , Q               , VoidSymbol      , VoidSymbol      ]}; // q Q
    key <AD02> {[ w               , W               , VoidSymbol      , VoidSymbol      ]}; // w W
    key <AD03> {[ e               , E               , VoidSymbol      , VoidSymbol      ]}; // e E
    key <AD04> {[ r               , R               , VoidSymbol      , VoidSymbol      ]}; // r R
    key <AD05> {[ t               , T               , VoidSymbol      , VoidSymbol      ]}; // t T
    key <AD06> {[ y               , Y               , VoidSymbol      , VoidSymbol      ]}; // y Y
    key <AD07> {[ u               , U               , VoidSymbol      , VoidSymbol      ]}; // u U
    key <AD08> {[ i               , I               , VoidSymbol      , VoidSymbol      ]}; // i I
    key <AD09> {[ o               , O               , VoidSymbol      , VoidSymbol      ]}; // o O
    key <AD10> {[ p               , P               , VoidSymbol      , VoidSymbol      ]}; // p P

    // Letters, second row
    key <AC01> {[ a               , A               , VoidSymbol      , VoidSymbol      ]}; // a A
    key <AC02> {[ s               , S               , VoidSymbol      , VoidSymbol      ]}; // s S
    key <AC03> {[ d               , D               , VoidSymbol      , VoidSymbol      ]}; // d D
    key <AC04> {[ f               , F               , VoidSymbol      , VoidSymbol      ]}; // f F
    key <AC05> {[ g               , G               , VoidSymbol      , VoidSymbol      ]}; // g G
    key <AC06> {[ h               , H               , VoidSymbol      , VoidSymbol      ]}; // h H
    key <AC07> {[ j               , J               , VoidSymbol      , VoidSymbol      ]}; // j J
    key <AC08> {[ k               , K               , VoidSymbol      , VoidSymbol      ]}; // k K
    key <AC09> {[ l               , L               , VoidSymbol      , VoidSymbol      ]}; // l L
    key <AC10> {[ semicolon       , colon           , semicolon       , colon           ]}; // ; : ; :

    // Letters, third row
    key <AB01> {[ z               , Z               , VoidSymbol      , VoidSymbol      ]}; // z Z
    key <AB02> {[ x               , X               , VoidSymbol      , VoidSymbol      ]}; // x X
    key <AB03> {[ c               , C               , VoidSymbol      , VoidSymbol      ]}; // c C
    key <AB04> {[ v               , V               , VoidSymbol      , VoidSymbol      ]}; // v V
    key <AB05> {[ b               , B               , VoidSymbol      , VoidSymbol      ]}; // b B
    key <AB06> {[ n               , N               , VoidSymbol      , VoidSymbol      ]}; // n N
    key <AB07> {[ m               , M               , VoidSymbol      , VoidSymbol      ]}; // m M
    key <AB08> {[ comma           , less            , comma           , less            ]}; // , < , <
    key <AB09> {[ period          , greater         , period          , greater         ]}; // . > . >
    key <AB10> {[ slash           , question        , slash           , question        ]}; // / ? / ?

    // Pinky keys
    key <AE11> {[ minus           , underscore      , VoidSymbol      , VoidSymbol      ]}; // - _
    key <AE12> {[ equal           , plus            , VoidSymbol      , VoidSymbol      ]}; // = +
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ bracketleft     , braceleft       , bracketleft     , braceleft       ]}; // [ { [ {
    key <AD12> {[ bracketright    , braceright      , bracketright    , braceright      ]}; // ] } ] }
    key <AC11> {[ apostrophe      , quotedbl        , apostrophe      , quotedbl        ]}; // ' " ' "
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ grave           , asciitilde      , VoidSymbol      , VoidSymbol      ]}; // ` ~
    key <BKSL> {[ backslash       , bar             , VoidSymbol      , VoidSymbol      ]}; // \ |
    key <LSGT> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //

    // Space bar
    key <SPCE> {[ space           , space           , space           , space           ]}; //

    include "level3(ralt_switch)"
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap
